var documenterSearchIndex = {"docs":
[{"location":"api.html#SpinGlassExhaustive","page":"API Reference","title":"SpinGlassExhaustive","text":"","category":"section"},{"location":"api.html#Index","page":"API Reference","title":"Index","text":"","category":"section"},{"location":"api.html","page":"API Reference","title":"API Reference","text":"Modules = [SpinGlassExhaustive]","category":"page"},{"location":"api.html","page":"API Reference","title":"API Reference","text":"Modules = [SpinGlassExhaustive]\nOrder   = [:function, :type]\n","category":"page"},{"location":"api.html#SpinGlassExhaustive.energy-Tuple{Any, Any}","page":"API Reference","title":"SpinGlassExhaustive.energy","text":"energy(state_code, graph)\n\n\nstate_code: state code for which the energy.\ngraph: graph of the ising model.\n\nReturns the state energy.\n\n\n\n\n\n","category":"method"},{"location":"api.html#SpinGlassExhaustive.energy_qubo-Tuple{Any, Any}","page":"API Reference","title":"SpinGlassExhaustive.energy_qubo","text":"energy_qubo(state_code, graph)\n\n\nstate_code: state code for which the energy expressed in qubo is to be calculated.\ngraph: graph of the ising model.\n\nReturns the state energy expressed as QUBO.\n\n\n\n\n\n","category":"method"},{"location":"api.html#SpinGlassExhaustive.exhaustive_search-Tuple{LabelledGraphs.LabelledGraph{MetaGraphs.MetaGraph{Int64, Float64}, Int64}}","page":"API Reference","title":"SpinGlassExhaustive.exhaustive_search","text":"exhaustive_search(ig)\n\n\nig::IsingGraph: graph of ising model represented by IsingGraph structure.\n\nReturns energies and states for provided model by brute-forece alorithm based on GPU.\n\n\n\n\n\n","category":"method"},{"location":"api.html#SpinGlassExhaustive.exhaustive_search_bucket","page":"API Reference","title":"SpinGlassExhaustive.exhaustive_search_bucket","text":"exhaustive_search_bucket(ig)\nexhaustive_search_bucket(ig, how_many)\n\n\nig::IsingGraph: graph of ising model represented by IsingGraph structure.\n\nReturns energies and states for provided model by brute-forece alorithm supported by bucket selection based on GPU.\n\n\n\n\n\n","category":"function"},{"location":"api.html#SpinGlassExhaustive.generate_random_graph-Tuple{Int64}","page":"API Reference","title":"SpinGlassExhaustive.generate_random_graph","text":"generate_random_graph(d)\n\n\nd::Int: size of random graph.\n\nReturns random array of size d.\n\n\n\n\n\n","category":"method"},{"location":"api.html#SpinGlassExhaustive.get_energy_offset-Tuple{Any}","page":"API Reference","title":"SpinGlassExhaustive.get_energy_offset","text":"get_energy_offset(graph)\n\n\ngraph: graph of the ising model.\n\nReturns offest between Ising model graph and its QUBO representation.\n\n\n\n\n\n","category":"method"},{"location":"api.html#SpinGlassExhaustive.graph_to_dict-Tuple{Any}","page":"API Reference","title":"SpinGlassExhaustive.graph_to_dict","text":"graph_to_dict(graph)\n\n\ngraph: graph of the ising model.\n\nConverts Ising model graph to Dict.\n\n\n\n\n\n","category":"method"},{"location":"api.html#SpinGlassExhaustive.graph_to_qubo-Tuple{Any}","page":"API Reference","title":"SpinGlassExhaustive.graph_to_qubo","text":"graph_to_qubo(graph)\n\n\ngraph: graph of the ising model.\n\nConverts Ising model graph to QUBO representation.\n\n\n\n\n\n","category":"method"},{"location":"api.html#SpinGlassExhaustive.kernel-Tuple{Any, Any}","page":"API Reference","title":"SpinGlassExhaustive.kernel","text":"kernel(graph, energies)\n\n\ngraph: graph of the ising model.\nenergies: array filled with zeros. Each array index represents the state of the system.\n\nReturns energies for every state.\n\n\n\n\n\n","category":"method"},{"location":"api.html#SpinGlassExhaustive.kernel_bucket-Tuple{Any, Any, Any}","page":"API Reference","title":"SpinGlassExhaustive.kernel_bucket","text":"kernel_bucket(graph, energies, idx)\n\n\ngraph: graph of the ising model.\nenergies: array filled with zeros. Each array index represents the state of the system.\nidx: list for collecting partial energy results.\n\nReturns energies for given indexes.\n\n\n\n\n\n","category":"method"},{"location":"api.html#SpinGlassExhaustive.kernel_part-NTuple{4, Any}","page":"API Reference","title":"SpinGlassExhaustive.kernel_part","text":"kernel_part(graph, energies, part_lst, part_st)\n\n\ngraph: graph of the ising model.\nenergies: array filled with zeros. Each array index represents the state of the system.\npart_lst: list for collecting partial energy results.\npart_st: list for collecting partial state results.\n\nReturns energies for every state.\n\n\n\n\n\n","category":"method"},{"location":"api.html#SpinGlassExhaustive.kernel_qubo-Tuple{Any, Any}","page":"API Reference","title":"SpinGlassExhaustive.kernel_qubo","text":"kernel_qubo(graph, energies)\n\n\ngraph: graph of the ising model.\nenergies: array filled with zeros. Each array index represents the state of the system.\n\nReturns energies energy expressed as QUBO for every state.\n\n\n\n\n\n","category":"method"},{"location":"api.html#SpinGlassExhaustive.max_chunk_size-Tuple{}","page":"API Reference","title":"SpinGlassExhaustive.max_chunk_size","text":"max_chunk_size()\n\n\nReturns the maximum chunk size for the algorithm supported by bucket selection.\n\n\n\n\n\n","category":"method"},{"location":"api.html#SpinGlassExhaustive.partial_exhaustive_search-Tuple{LabelledGraphs.LabelledGraph{MetaGraphs.MetaGraph{Int64, Float64}, Int64}}","page":"API Reference","title":"SpinGlassExhaustive.partial_exhaustive_search","text":"partial_exhaustive_search(ig)\n\n\nig::IsingGraph: graph of ising model represented by IsingGraph structure.\n\nReturns energies and states for provided model by brute-forece alorithm supported by partial selection based on GPU.\n\n\n\n\n\n","category":"method"},{"location":"lib/content/naive.html#naive.jl","page":"naive.jl","title":"naive.jl","text":"","category":"section"},{"location":"lib/content/naive.html","page":"naive.jl","title":"naive.jl","text":"function naiveenergykernel(J, energies, σ)","category":"page"},{"location":"lib/content/naive.html","page":"naive.jl","title":"naive.jl","text":"- J: partial description of graph of the ising model.\n- energies: array filled with zeros. Each array index represents the state of the system.\n- σ: partial description of graph of the ising model.\nReturns the state energy.","category":"page"},{"location":"lib/content/naive.html","page":"naive.jl","title":"naive.jl","text":"** function brute_force(ig::IsingGraph)**","category":"page"},{"location":"lib/content/naive.html","page":"naive.jl","title":"naive.jl","text":"- ig::IsingGraph: graph of ising model represented by IsingGraph structure.\nReturns energies and states for provided model by naive brute-forece alorithm based on GPU.","category":"page"},{"location":"lib/SpinGlassExhaustive.html#Documentation","page":"Documentation","title":"Documentation","text":"","category":"section"},{"location":"lib/SpinGlassExhaustive.html#Index","page":"Documentation","title":"Index","text":"","category":"section"},{"location":"lib/SpinGlassExhaustive.html","page":"Documentation","title":"Documentation","text":"A list of all documentation sorted by module.","category":"page"},{"location":"lib/SpinGlassExhaustive.html","page":"Documentation","title":"Documentation","text":"Modules = [SpinGlassExhaustive]","category":"page"},{"location":"lib/SpinGlassExhaustive.html","page":"Documentation","title":"Documentation","text":"Modules = [SpinGlassExhaustive]","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Author = \"Dariusz Kurzyk, Łukasz Pawela\"","category":"page"},{"location":"index.html#Home","page":"Introduction","title":"Home","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"A julia package providing algorithm for solving the problem of finding the ground state of a spin glass system based on exhaustive search by GPU. ","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The package includes algorithms:","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"naive brute-force exhaustive search by GPU\nbrute-force exhaustive search with bucket selection by GPU\nbrute-force exhaustive search returning partial results by one kernel in GPU","category":"page"},{"location":"index.html#refs","page":"Introduction","title":"References","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"[1] Jałowiecki, K., Rams, M. M., & Gardas, B. (2021). Brute-forcing spin-glass problems with CUDA. Computer Physics Communications, 260, 107728.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"[2] Tao, M., Nakano, K., Ito, Y., Yasudo, R., Tatekawa, M., Katsuki, R., ... & Inaba, Y. (2020, May). A Work-Time Optimal Parallel Exhaustive Search Algorithm for the QUBO and the Ising model, with GPU implementation. In 2020 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW) (pp. 557-566). IEEE.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"[3] Cook, C., Zhao, H., Sato, T., Hiromoto, M., & Tan, S. X. D. (2018). GPU based parallel Ising computing for combinatorial optimization problems in VLSI physical design. arXiv preprint arXiv:1807.10750.","category":"page"},{"location":"lib/content/ising.html#ising.jl","page":"ising.jl","title":"ising.jl","text":"","category":"section"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"function energy(state_code, graph)","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"- state_code: state code for which the energyis to be calculated.\n- graph: graph of the ising model.\nReturns the state energy.","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"function energyqubo(statecode, graph)","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"- state_code: state code for which the energy expressed in qubo is to be calculated.\n- graph: graph of the ising model.\nReturns the state energy expressed as QUBO.","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"function kernel(graph, energies)","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"- graph: graph of the ising model.\n- energies: array filled with zeros. Each array index represents the state of the system.\nReturns energies for every state.","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"function kernel_qubo(graph, energies)","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"- graph: graph of the ising model.\n- energies: array filled with zeros. Each array index represents the state of the system.\nReturns energies energy expressed as QUBO for every state.","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"function kernelpart(graph, energies, partlst, part_st)","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"- graph: graph of the ising model.\n- energies: array filled with zeros. Each array index represents the state of the system.\n- part_lst: list for collecting partial energy results\n- part_st: list for collecting partial state results\nReturns energies for every state.","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"function kernel_bucket(graph, energies, idx)","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"- graph: graph of the ising model.\n- energies: array filled with zeros. Each array index represents the state of the system.\n- idx: list for collecting partial energy results\nReturns energies for given indexes.","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"function exhaustive_search(ig::IsingGraph)","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"- ig::IsingGraph: graph of ising model represented by IsingGraph structure.\nReturns energies and states for provided model by brute-forece alorithm based on GPU.","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"function partialexhaustivesearch(ig::IsingGraph)","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"- ig::IsingGraph: graph of ising model represented by IsingGraph structure.\nReturns partial results for energies and states for provided model by brute-force algorithm based on GPU.","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"function exhaustivesearchbucket(ig::IsingGraph, how_many = 8)","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"- ig::IsingGraph: graph of ising model represented by IsingGraph structure.\n- how_many: number of states.\nReturns energies and states for provided model by brute-forece alorithm supported by bucket selection based on GPU.","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"function maxchunksize()","category":"page"},{"location":"lib/content/ising.html","page":"ising.jl","title":"ising.jl","text":"Returns the maximum chunk size for the algorithm supported by bucket selection.","category":"page"},{"location":"man/quickstart.html#manual","page":"Quickstart","title":"Quickstart","text":"","category":"section"},{"location":"man/quickstart.html","page":"Quickstart","title":"Quickstart","text":"If this is your first use of the Julia Language, please read the Documentation. The latest release of SpinGlassExhaustive.jl can be installed from the Julia REPL prompt with","category":"page"},{"location":"man/quickstart.html","page":"Quickstart","title":"Quickstart","text":"julia> Pkg.add(\"SpinGlassExhaustive.jl\")","category":"page"},{"location":"man/quickstart.html","page":"Quickstart","title":"Quickstart","text":"Package SpinGlassExhaustive.jl can be loaded via","category":"page"},{"location":"man/quickstart.html","page":"Quickstart","title":"Quickstart","text":"julia> using SpinGlassExhaustive.jl","category":"page"},{"location":"man/quickstart.html","page":"Quickstart","title":"Quickstart","text":"This manual provides a introduction explaining how use this package for numerical computations in quantum information theory.","category":"page"}]
}
